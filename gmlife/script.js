// var matrix = [
//     [1,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [1,2,2,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [1,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
//     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ]


// ];

var matrix = [ 
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1],
    [1,2,1,5,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1,2,0,5,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1],
    [1,2,1,5,0,4,0,0,0,1,1,0,0,0,4,0,3,0,2,1,2,0,5,0,4,0,0,0,1,1,0,0,0,4,0,3,0,2,1],
    [1,2,1,5,0,4,0,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,0,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,1,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,0,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,0,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,0,5,1,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1,2,0,5,0,4,2,3,0,1,1,0,5,0,4,0,3,0,2,1],
    [1,2,0,5,1,4,0,0,0,1,1,0,0,0,4,0,3,0,2,1,2,0,5,0,4,0,0,0,1,1,0,0,0,4,0,3,0,2,1],
    [1,2,0,5,1,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1,2,0,5,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1],
    [1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,2,0,1,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1,2,0,5,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1],
    [1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,2,0,1,0,0,0,1,2,1,1,2,0,0,0,0,3,0,2,1,2,0,1,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1],
    [1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,2,0,1,0,0,0,1,2,1,1,2,0,0,0,0,3,0,2,1,2,0,1,0,0,0,0,2,1,1,2,0,0,0,0,3,0,2,1],



]



/////////////////////Random MATRIX

// function abc(min, max) {
//   return Math.floor(Math.random() * (max + 1 - min)) + min;
// }

// var matrix = [];
// var a = 30
// var b = 30


// for (var i = 0; i < a; i++) {
//   matrix[i] = [];
//   for (var z = 0; z < b; z++) {
//     matrix[i][z] = abc(0, 1);
//   }
// }


// bakteria2qanak = 7;
// bakteriaqanak = 6;
// xotakerqanak = 2;
// gishatichqanak=3;
// hreshqanak=4;
// mazeqanak=7;
// xotqanak=1;

// while (bakteria2qanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 7;
//       bakteria2qanak--;
//     }
// }

//   while (bakteriaqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 6;
//       bakteriaqanak--;
//     }
// }


// while (xotqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 1;
//       xotqanak--;
//     }
// }

//   while (xotakerqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 2;
//       xotakerqanak--;
//     }
// }

//   while (gishatichqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 3;
//       gishatichqanak--;
//     }
// }



//   while (hreshqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 4;
//       hreshqanak--;
//     }
// }


//   while (mazeqanak > 0) {
//     var x = Math.floor(Math.random() * a);
//     var y = Math.floor(Math.random() * b);

//     if(matrix[y][x] == 0){
//       matrix[y][x] = 5;
//       mazeqanak--;
//     }
// }


// console.log(matrix);


var side = 20;
var grassArr = [];
var xotakerArr = [];
var gishatichArr = [];
var imobjectArr = [];
var imobject1Arr = [];
//console.log(grassArr);

function setup() {
    frameRate(5);
    createCanvas(matrix[0].length * side, matrix.length * side);
    background('grey');
    stroke("black");

    for (var y = 0; y < matrix.length; y++) {
        for (var x = 0; x < matrix[y].length; x++) {

            if (matrix[y][x] == 1) {
                var obj = new Grass(x, y, 1);
                grassArr.push(obj);

            }
           else if(matrix[y][x] == 2){
               var xt = new Xotaker(x,y,2);
               xotakerArr.push(xt);
           }
           else if(matrix[y][x] == 3){
            var gsh = new Gishatich(x,y,3);
            gishatichArr.push(gsh);
        }
        else if(matrix[y][x] == 4){
            var imb = new Imobject(x,y,4);
            imobjectArr.push(imb);
        }
        else if(matrix[y][x] == 5){
            var imb1 = new Imobject1(x,y,5);
            imobject1Arr.push(imb1);
        }
        }
    }
}


function draw() {

    for (var y = 0; y < matrix.length; y++) {
        for (var x = 0; x < matrix[y].length; x++) {

            if (matrix[y][x] == 1) {

                fill("#339933");

            }
            else if (matrix[y][x] == 0) {
                fill("grey");
            }
            else if (matrix[y][x] == 2) {
                fill("yellow");
            }
            else if (matrix[y][x] == 3) {
                fill("red");
            }
            else if (matrix[y][x] == 4) {
                fill("black");
            }
            else if (matrix[y][x] == 5) {
                fill("#003300");
            }
            rect(x * side, y * side, side, side);
        }
    }
    

    for (var i in grassArr) {
        grassArr[i].mult();
    }
    for (var i in xotakerArr) {
        xotakerArr[i].move();
        xotakerArr[i].eat();
        xotakerArr[i].mult();
        xotakerArr[i].die();
    }
    for (var i in gishatichArr) {
        gishatichArr[i].move();
        gishatichArr[i].eat();
        gishatichArr[i].mult();
        gishatichArr[i].die();
    }
    for (var i in imobjectArr) {
        imobjectArr[i].move();
        imobjectArr[i].eat();
        imobjectArr[i].mult();
        imobjectArr[i].die();
    }
    for (var i in imobject1Arr) {
        imobject1Arr[i].move();
        imobject1Arr[i].eat();
        imobject1Arr[i].mult();
        imobject1Arr[i].die();
        
    }
     
    
    
}


